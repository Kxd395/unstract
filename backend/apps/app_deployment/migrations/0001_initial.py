# Generated by Django 4.2.1 on 2024-02-29 09:38

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("workflow", "0002_remove_workflow_settings"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AppDeployment",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "application_name",
                    models.CharField(
                        db_comment="User-given name for the Application.",
                        default="api deployment",
                        max_length=30,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        db_comment="User-given description for the Application",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "subdomain",
                    models.CharField(
                        db_comment="User-given name for the Application.",
                        max_length=30,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid domain name.",
                                regex="^[a-zA-Z0-9.-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "dns_domain",
                    models.CharField(
                        db_comment="Main domain under which the subdomain is added.",
                        editable=False,
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid domain name.",
                                regex="^[a-zA-Z0-9.-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "dns_top_level_domain",
                    models.CharField(
                        db_comment="Top domain like com, io etc.",
                        editable=False,
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid domain name.",
                                regex="^[a-zA-Z0-9.-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "dns_provider",
                    models.CharField(
                        choices=[
                            ("LOCALHOST", "Localhost DNS"),
                            ("CLOUDFLARE", "Cloudflare DNS"),
                        ],
                        db_comment="DNS Provider which was used for configuration.",
                        editable=False,
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        choices=[
                            ("CHAT", "Chat"),
                            ("QUESTIONS", "Canned Questions"),
                            ("CHATANDQUESTIONS", "Chat with Canned Questions"),
                        ],
                        default="CHAT",
                    ),
                ),
                (
                    "knowledge_base_mode",
                    models.CharField(
                        choices=[
                            ("SINGLE", "Single Document"),
                            ("MULTIPLE", "Multiple Documents"),
                        ],
                        default="SINGLE",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_comment="Flag indicating status is active or not.",
                        default=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="app_deployment_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="app_deployment_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        db_comment="Foreign key reference to Workflow model.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workflow.workflow",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
